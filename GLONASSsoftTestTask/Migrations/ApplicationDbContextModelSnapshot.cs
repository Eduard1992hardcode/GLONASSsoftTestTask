// <auto-generated />
using System;
using GLONASSsoftTestTask.Infrastructure.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace GLONASSsoftTestTask.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("timestamp with time zone");

                    b.Property<decimal>("Percent")
                        .HasColumnType("numeric");

                    b.Property<Guid?>("ResultId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("UserId1")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("ResultId");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("StatisticTask", "TestTask");
                });

            modelBuilder.Entity("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskResultEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("CountSignIn")
                        .HasColumnType("integer");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("TaskId")
                        .IsUnique();

                    b.ToTable("StatisticTaskResult", "TestTask");
                });

            modelBuilder.Entity("GLONASSsoftTestTask.Infrastructure.Models.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("FirstName")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.Property<string>("SecondName")
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("User", "TestTask");
                });

            modelBuilder.Entity("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskEntity", b =>
                {
                    b.HasOne("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskResultEntity", "Result")
                        .WithMany()
                        .HasForeignKey("ResultId");

                    b.HasOne("GLONASSsoftTestTask.Infrastructure.Models.Entities.UserEntity", null)
                        .WithMany("SatisticTasks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GLONASSsoftTestTask.Infrastructure.Models.Entities.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId1");

                    b.Navigation("Result");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskResultEntity", b =>
                {
                    b.HasOne("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskEntity", "Task")
                        .WithOne()
                        .HasForeignKey("GLONASSsoftTestTask.Infrastructure.Models.Entities.StatisticTaskResultEntity", "TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");
                });

            modelBuilder.Entity("GLONASSsoftTestTask.Infrastructure.Models.Entities.UserEntity", b =>
                {
                    b.Navigation("SatisticTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
